syntax = "proto3";
package video;
option go_package = "sparks/grpc_gen/video;proto";
import "user.proto";

message Video {
  int64 id = 1; // 视频唯一标识
  user.User author = 2; // 视频作者信息
  string play_url = 3; // 视频播放地址
  string cover_url = 4; // 视频封面地址
  int32 favorite_count = 5; // 视频的点赞总数
  int32 comment_count = 6; // 视频的评论总数
  bool is_favorite = 7; // true-已点赞，false-未点赞
  string title = 8; // 视频标题
}

message VideoFeedRequest {
  string latest_time = 1; // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
  int64 user_id = 2; // 可选参数，登录用户设置
}

message VideoFeedResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated Video video_list = 3; // 视频列表
  int64 next_time = 4; // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
}

message PublishVideoRequest {
  int64 user_id = 1; // 用户id
  bytes data = 2; // 视频数据
  string title = 3; // 视频标题
}

message PublishVideoResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
}

message PublishVideoListRequest {
  int64 from_user_id = 1;
  int64 to_user_id = 2;
}

message PublishVideoListResponse {
  int32 status_code = 1;
  string status_msg = 2;
  repeated Video video_list = 3;
}

message GetWorkCountRequest {
  int64 user_id = 1;
}

message GetWorkCountResponse {
  int32 work_count = 1; // 作品数数量
}

service VideoService {
  rpc VideoFeed(VideoFeedRequest) returns (VideoFeedResponse);
  rpc PublishVideo(PublishVideoRequest) returns (PublishVideoResponse);
  rpc GetPublishVideoList(PublishVideoListRequest) returns (PublishVideoListResponse);
  rpc GetWorkCount(GetWorkCountRequest) returns (GetWorkCountResponse);
}
