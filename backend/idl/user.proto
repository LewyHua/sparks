syntax = "proto3";
package user;
option go_package = "sparks/grpc_gen/user;proto";

message User {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  int32 follow_count = 3; // 关注总数
  int32 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
  string avatar = 6; // 用户头像
  string background_image = 7; // 用户个人顶部大图
  string signature = 8; // 个人简介
  string total_favorited = 9; // 获赞数量
  int32 work_count = 10; // 作品数量
  int32 favorite_count = 11; // 点赞数量
}

message UserRegisterRequest {
  string username = 1; // 注册用户名，最长32个字符
  string password = 2; // 密码，最长32个字符
}

message UserRegisterResponse {
  int32 status_code = 1; // 状态码，200-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  int64 user_id = 3; // 用户id
  string token = 4; // 用户鉴权token
}

message UserLoginRequest {
  string username = 1; // 注册用户名，最长32个字符
  string password = 2; // 密码，最长32个字符
}

message UserLoginResponse {
  int32 status_code = 1; // 状态码，200-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  int64 user_id = 3; // 用户id
  string token = 4; // 用户鉴权token
}

message UserInfoByIdRequest {
  int64 actor_id = 1; // 调用者id
  int64 user_id = 2; // 查询该id的信息
}

message UserInfoByIdResponse {
  int32 status_code = 1; // 状态码，200-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  User user = 3; // 用户信息
}

message UserInfoByUsernameRequest {
  string username = 1; // 用户名
}

message UserInfoByUsernameResponse {
  int32 status_code = 1; // 状态码，200-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  int64 user_id = 3; // 用户信息
  string password = 4;
}

message UserExistsRequest {
  string username = 1;
}

message UserExistsResponse {
  bool exist = 1;
}

service UserService {
  rpc Register(UserRegisterRequest) returns (UserRegisterResponse);
  rpc Login(UserLoginRequest) returns (UserLoginResponse);
  rpc GetUserInfoById(UserInfoByIdRequest) returns (UserInfoByIdResponse);
  rpc GetUserInfoByName(UserInfoByUsernameRequest) returns (UserInfoByUsernameResponse);
  rpc CheckUserExists(UserExistsRequest) returns (UserExistsResponse);
}
